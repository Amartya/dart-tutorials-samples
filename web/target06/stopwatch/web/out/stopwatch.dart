// Auto-generated from stopwatch.html.
// DO NOT EDIT.

library stopwatch_html;

import 'dart:html' as autogenerated_html;
import 'dart:web_audio' as autogenerated_audio;
import 'dart:svg' as autogenerated_svg;
import 'package:web_ui/web_ui.dart' as autogenerated;

import 'dart:html';

import 'package:web_ui/watcher.dart' as watchers;


// Original code
String counter='00:00';
Stopwatch mywatch = new Stopwatch();

ButtonElement stopButton;
ButtonElement startButton;
ButtonElement resetButton;

void main() {
  startButton = query("#startbutton");
  stopButton = query("#stopbutton");
  stopButton.disabled = true;
  resetButton = query("#resetbutton");
  resetButton.disabled = true;
}

void startwatch() {
  mywatch.start();
  window.setInterval(updateTime, 1000);
  startButton.disabled = true;
  stopButton.disabled = false;
  resetButton.disabled = true;
}

void stopwatch() {
  mywatch.stop();
  startButton.disabled = false;
  resetButton.disabled = false;
  stopButton.disabled = true;
}

void resetwatch() {
  mywatch.reset();
  counter = '00:00';
  resetButton.disabled = true;
}

void updateTime() {
  var s = mywatch.elapsedMilliseconds~/1000;
  var m = 0;
  
  if (s >= 60) { m = s ~/ 60; s = s % 60; }
    
  String minute = (m <= 9) ? '0$m' : '$m';
  String second = (s <= 9) ? '0$s' : '$s';
  counter = '$minute:$second';
  watchers.dispatch();
}

// Additional generated code
/** Create the views and bind them to models. */
void init_autogenerated() {
  var _root = autogenerated_html.document.body;
  autogenerated_html.DivElement __stopwatch;
  
  autogenerated_html.DivElement __e1;
  
  var __binding0;
  
  List<autogenerated.WatcherDisposer> __stoppers1;
  
  autogenerated_html.ButtonElement __startbutton;
  
  autogenerated_html.EventListener __listener__startbutton_click_2;
  
  autogenerated_html.ButtonElement __stopbutton;
  
  autogenerated_html.EventListener __listener__stopbutton_click_3;
  
  autogenerated_html.ButtonElement __resetbutton;
  
  autogenerated_html.EventListener __listener__resetbutton_click_4;
  


  // Initialize fields.
  __stopwatch = _root.query('#stopwatch');
  __e1 = __stopwatch.query('#__e-1');
  __binding0 = new autogenerated_html.Text('');
  __stoppers1 = [];
  __e1.nodes.add(new autogenerated_html.Text('\n      '));
  __e1.nodes.add(__binding0);
  __e1.nodes.add(new autogenerated_html.Text('\n      '));
  __startbutton = __stopwatch.query('#startbutton');
  __stopbutton = __stopwatch.query('#stopbutton');
  __resetbutton = __stopwatch.query('#resetbutton');
  

  // Attach model to views.
  __stoppers1.add(autogenerated.watchAndInvoke(() => '${counter}', (__e) {
    __binding0 = autogenerated.updateBinding(counter, __binding0, __e.newValue);
  }));
  
  __listener__startbutton_click_2 = ($event) {
    startwatch();
    autogenerated.dispatch();
  };
  __startbutton.on.click.add(__listener__startbutton_click_2);
  
  __listener__stopbutton_click_3 = ($event) {
    stopwatch();
    autogenerated.dispatch();
  };
  __stopbutton.on.click.add(__listener__stopbutton_click_3);
  
  __listener__resetbutton_click_4 = ($event) {
    resetwatch();
    autogenerated.dispatch();
  };
  __resetbutton.on.click.add(__listener__resetbutton_click_4);
  

}
