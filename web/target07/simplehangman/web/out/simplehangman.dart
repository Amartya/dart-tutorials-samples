// Auto-generated from simplehangman.html.
// DO NOT EDIT.

library simplehangman_html;

import 'dart:html' as autogenerated_html;
import 'dart:web_audio' as autogenerated_audio;
import 'dart:svg' as autogenerated_svg;
import 'package:web_ui/web_ui.dart' as autogenerated;


// Original code
String answer = 'pumpernickel';
List<String> characters = answer.splitChars();
List<String> hyphens    = answer.replaceAll(new RegExp('.'), '-').splitChars();

List<String> wrongletters = new List();
String guessedletter = '';
bool dead = false;
bool won = false;

void main() {
}

void checkit() {  
  const int maxwrong = 7;
  if (characters.contains(guessedletter)) {  // guess is correct
    revealletters();
    if (!hyphens.contains('-')) {
      won = true;
    }
  } else {                                   // guess is wrong
    wrongletters.add(guessedletter);
    if (wrongletters.length == maxwrong) {
      dead = true;
    }
  }
  guessedletter = '';
}

void revealletters() {
  for (int i = 0; i < characters.length; i++) {
    if (characters[i] == guessedletter) {
      hyphens[i] = guessedletter;
    }
  }
}

// Additional generated code
/** Create the views and bind them to models. */
void init_autogenerated() {
  var _root = autogenerated_html.document.body;
  autogenerated_html.DivElement __hangman;
  
  autogenerated_html.Element __e1;
  
  List<autogenerated.WatcherDisposer> __stoppers1;
  
  List<Function> _removeChild__e1 = [];
  
  autogenerated_html.Node _endPosition__e1;
  
  autogenerated_html.Element __e7;
  
  autogenerated_html.Node _endPosition__e7;
  
  bool _isVisible__e7 = false;
  
  autogenerated_html.InputElement __e2;
  
  autogenerated_html.EventListener __listener__e2_input_3_1;
  
  autogenerated_html.EventListener __listener__e2_keyUp_4_2;
  
  List<autogenerated.WatcherDisposer> __stoppers5_3;
  
  autogenerated_html.ParagraphElement __e4;
  
  autogenerated_html.Element __e3;
  
  autogenerated_html.Node _endPosition__e3;
  
  bool _isVisible__e3 = false;
  
  autogenerated_html.ParagraphElement __wrong;
  
  autogenerated_html.Element __e6;
  
  List<Function> _removeChild__e6 = [];
  
  autogenerated_html.Node _endPosition__e6;
  
  autogenerated_html.Element __e8;
  
  autogenerated_html.Node _endPosition__e8;
  
  bool _isVisible__e8 = false;
  
  autogenerated_html.Element __e9;
  
  autogenerated_html.Node _endPosition__e9;
  
  bool _isVisible__e9 = false;
  


  // Initialize fields.
  __hangman = _root.query('#hangman');
  __e1 = __hangman.query('#__e-1');
  __stoppers1 = [];
  __e7 = _root.query('#__e-7');
  __e8 = _root.query('#__e-8');
  __e9 = _root.query('#__e-9');
  

  // Attach model to views.
  _endPosition__e1 = __e1;
  
  __stoppers1.add(autogenerated.watchAndInvoke(() => hyphens, (_) {
    for (var remover in _removeChild__e1) remover();
    _removeChild__e1.clear();
    
    _endPosition__e1 = autogenerated.removeNodes(__e1, _endPosition__e1);
    
    var __insert___e1 = __e1.nextNode;
    
    for (var character in hyphens) {
      
      var __binding0;
      List<autogenerated.WatcherDisposer> __stoppers2_1;
      
      __binding0 = new autogenerated_html.Text('');
      __stoppers2_1 = [];
      
      autogenerated.insertAllBefore(__e1.parentNode, __insert___e1,
      
      [new autogenerated_html.Text(' '), __binding0, _endPosition__e1 = new autogenerated_html.Text(' ')]);
      
      __stoppers2_1.add(autogenerated.watchAndInvoke(() => '${character}', (__e) {
        __binding0 = autogenerated.updateBinding(character, __binding0, __e.newValue);
      }));
      
      _removeChild__e1.add(() {
        
        (__stoppers2_1..forEach((s) => s())).clear();
        __binding0 = null;
        
      });
    }
  }));
  
  _endPosition__e7 = __e7;
  
  __stoppers1.add(autogenerated.watchAndInvoke(() => !dead && !won, (__e) {
    bool showNow = __e.newValue;
    if (_isVisible__e7 && !showNow) {
      _isVisible__e7 = false;
      
      (__stoppers5_3..forEach((s) => s())).clear();
      __e2.on.input.remove(__listener__e2_input_3_1);
      __listener__e2_input_3_1 = null;
      
      __e2.on.keyUp.remove(__listener__e2_keyUp_4_2);
      __listener__e2_keyUp_4_2 = null;
      
      __e2 = null;
      __e4 = null;
      if (_isVisible__e3) {
        _endPosition__e3 = autogenerated.removeNodes(__e3, _endPosition__e3);
      }
      __e3 = null;
      __wrong = null;
      _endPosition__e6 = autogenerated.removeNodes(__e6, _endPosition__e6);
      for (var remover in _removeChild__e6) remover();
      _removeChild__e6.clear();
      
      __e6 = null;
      
      _endPosition__e7 = autogenerated.removeNodes(__e7, _endPosition__e7);
      
    } else if (!_isVisible__e7 && showNow) {
      
      _isVisible__e7 = true;
      
      __e2 = new autogenerated_html.InputElement();
      __stoppers5_3 = [];
      __e4 = new autogenerated_html.Element.html('<p>\n              <template id="__e-3" style="display:none"></template>\n            </p>');
      __e3 = __e4.query('#__e-3');
      __wrong = new autogenerated_html.Element.html('<p id="wrong">\n              <template id="__e-6" style="display:none"></template>\n            </p>');
      __e6 = __wrong.query('#__e-6');
      
      autogenerated.insertAllBefore(__e7.parentNode, __e7.nextNode,
      
      [new autogenerated_html.Text('\n            Guess a letter...\n            '), __e2, new autogenerated_html.Text('\n            '), __e4, new autogenerated_html.Text('\n            '), __wrong, _endPosition__e7 = new autogenerated_html.Text('\n          ')]);
      
      __listener__e2_input_3_1 = ($event) {
        guessedletter = __e2.value;
        autogenerated.dispatch();
      };
      __e2.on.input.add(__listener__e2_input_3_1);
      
      __listener__e2_keyUp_4_2 = ($event) {
        checkit();
        autogenerated.dispatch();
      };
      __e2.on.keyUp.add(__listener__e2_keyUp_4_2);
      
      __stoppers5_3.add(autogenerated.watchAndInvoke(() => guessedletter, (__e) { __e2.value = __e.newValue; }));
      _endPosition__e3 = __e3;
      __stoppers5_3.add(autogenerated.watchAndInvoke(() => wrongletters.length != 0, (__e) {
        bool showNow = __e.newValue;
        if (_isVisible__e3 && !showNow) {
          _isVisible__e3 = false;
          
          _endPosition__e3 = autogenerated.removeNodes(__e3, _endPosition__e3);
        } else if (!_isVisible__e3 && showNow) {
          _isVisible__e3 = true;
          autogenerated.insertAllBefore(__e3.parentNode, __e3.nextNode,
          [_endPosition__e3 = new autogenerated_html.Text(' Sorry! The word contains no: ')]);
          
        }
      }));
      
      _endPosition__e6 = __e6;
      __stoppers5_3.add(autogenerated.watchAndInvoke(() => wrongletters, (_) {
        for (var remover in _removeChild__e6) remover();
        _removeChild__e6.clear();
        
        _endPosition__e6 = autogenerated.removeNodes(__e6, _endPosition__e6);
        var __insert___e6 = __e6.nextNode;
        for (var usedchars in wrongletters) {
          var __binding5;
          List<autogenerated.WatcherDisposer> __stoppers6_4_1;
          __binding5 = new autogenerated_html.Text('');
          __stoppers6_4_1 = [];
          autogenerated.insertAllBefore(__e6.parentNode, __insert___e6,
          [new autogenerated_html.Text(' '), __binding5, _endPosition__e6 = new autogenerated_html.Text(' ')]);
          __stoppers6_4_1.add(autogenerated.watchAndInvoke(() => '${usedchars}', (__e) {
            __binding5 = autogenerated.updateBinding(usedchars, __binding5, __e.newValue);
          }));
          _removeChild__e6.add(() {
            (__stoppers6_4_1..forEach((s) => s())).clear();
            __binding5 = null;
          });
        }
      }));
      
    }
  }));
  
  _endPosition__e8 = __e8;
  
  __stoppers1.add(autogenerated.watchAndInvoke(() => dead, (__e) {
    bool showNow = __e.newValue;
    if (_isVisible__e8 && !showNow) {
      _isVisible__e8 = false;
      
      _endPosition__e8 = autogenerated.removeNodes(__e8, _endPosition__e8);
      
    } else if (!_isVisible__e8 && showNow) {
      
      _isVisible__e8 = true;
      
      autogenerated.insertAllBefore(__e8.parentNode, __e8.nextNode,
      
      [_endPosition__e8 = new autogenerated_html.Text(' You\'re dead! ')]);
      
    }
  }));
  
  _endPosition__e9 = __e9;
  
  __stoppers1.add(autogenerated.watchAndInvoke(() => won, (__e) {
    bool showNow = __e.newValue;
    if (_isVisible__e9 && !showNow) {
      _isVisible__e9 = false;
      
      _endPosition__e9 = autogenerated.removeNodes(__e9, _endPosition__e9);
      
    } else if (!_isVisible__e9 && showNow) {
      
      _isVisible__e9 = true;
      
      autogenerated.insertAllBefore(__e9.parentNode, __e9.nextNode,
      
      [_endPosition__e9 = new autogenerated_html.Text(' You Win! ')]);
      
    }
  }));
  

}
